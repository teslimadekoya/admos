# Generated by Django 5.1.4 on 2025-09-21 13:33

from django.db import migrations


def restore_historical_data(apps, schema_editor):
    """Restore historical data for bag items that have NULL food_item references."""
    BagItem = apps.get_model('store', 'BagItem')
    
    # Find bag items that have NULL food_item but are in delivered orders
    # These are the ones that lost their data due to CASCADE deletion
    bag_items_with_null_food_item = BagItem.objects.filter(
        food_item__isnull=True,
        bag__orders__status='Delivered'
    )
    
    print(f"Found {bag_items_with_null_food_item.count()} bag items with missing food_item data")
    
    # For now, we'll create placeholder data since the original food items are gone
    # In a real scenario, you'd want to restore from backups
    for bag_item in bag_items_with_null_food_item:
        if not bag_item.item_name:
            bag_item.item_name = "[Deleted Item]"
            bag_item.item_price = 0
            bag_item.item_category = "[Deleted Category]"
            bag_item.save()
            print(f"Restored placeholder data for bag item {bag_item.id}")


def reverse_restore_historical_data(apps, schema_editor):
    """Reverse migration - no action needed."""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0014_alter_bagitem_food_item'),
    ]

    operations = [
        migrations.RunPython(restore_historical_data, reverse_restore_historical_data),
    ]
